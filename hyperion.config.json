// Automatically generated configuration file for 'Hyperion daemon'
// Generated by: HyperCon (The Hyperion deamon configuration file builder

{
  /// Device configuration contains the following fields:
  /// * 'name'       : The user friendly name of the device (only used for display purposes)
  /// * 'type'       : The type of the device or leds (known types for now are 'ws2801', 'ldp8806',
  ///                  'lpd6803', 'sedu', 'adalight', 'lightpack', 'test' and 'none')
  /// * 'input'      : The monitor index to capture image data from
  /// * 'output'     : The output specification depends on selected device. This can for example be the
  ///                  device specifier, device serial number, or the output file name
  /// * 'rate'       : The baudrate of the output to the device
  /// * 'colorOrder' : The order of the color bytes ('rgb', 'rbg', 'bgr', etc.).
  "device" :
  {
    "name"       : "MyPi",
    "type"       : "ws2801",
    "input"      : 0,
    ///    "output"     : "/dev/ttyUSB0",
    "output"     : "COM3",
    "rate"       : 115200,
    "colorOrder" : "rgb"
  },

  /// Color manipulation configuration used to tune the output colors to specific surroundings.
  /// The configuration contains a list of color-transforms. Each transform contains the
  /// following fields:
  ///  * 'id'   : The unique identifier of the color transformation (eg 'device_1')	///  * 'leds' : The indices (or index ranges) of the leds to which this color transform applies
  ///             (eg '0-5, 9, 11, 12-17'). The indices are zero based.	///  * 'hsv' : The manipulation in the Hue-Saturation-Value color domain with the following
  ///            tuning parameters:
  ///            - 'saturationGain'  The gain adjustement of the saturation
  ///            - 'valueGain'       The gain adjustement of the value
  ///  * 'red'/'green'/'blue' : The manipulation in the Red-Green-Blue color domain with the
  ///                           following tuning parameters for each channel:
  ///            - 'threshold'       The minimum required input value for the channel to be on
  ///                                (else zero)
  ///            - 'gamma'           The gamma-curve correction factor
  ///            - 'blacklevel'      The lowest possible value (when the channel is black)
  ///            - 'whitelevel'      The highest possible value (when the channel is white)
  ///
  /// Next to the list with color transforms there is also a smoothing option.
  ///  * 'smoothing' : Smoothing of the colors in the time-domain with the following tuning
  ///                  parameters:
  ///            - 'type'            The type of smoothing algorithm ('linear' or 'none')
  ///            - 'time_ms'         The time constant for smoothing algorithm in milliseconds
  ///            - 'updateFrequency' The update frequency of the leds in Hz
  "color" :
  {
    "transform" :
    [
      {
	"id"   : "default",
	"leds" : "*",
	"hsv" :
	{
	  "saturationGain" : 1.1900,
	  "valueGain"      : 0.9000
	},
	"red" :
	{
	  "threshold"  : 0.0200,
	  "gamma"      : 1.2200,
	  "blacklevel" : 0.0000,
	  "whitelevel" : 1.0000
	},
	"green" :
	{
	  "threshold"  : 0.0200,
	  "gamma"      : 1.2900,
	  "blacklevel" : 0.0000,
	  "whitelevel" : 0.8800
	},
	"blue" :
	{
	  "threshold"  : 0.0200,
	  "gamma"      : 1.3600,
	  "blacklevel" : 0.0000,
	  "whitelevel" : 0.8300
	}
      }
    ],
    "smoothing" :
    {
      "type"            : "linear",
      "time_ms"         : 70,
      "updateFrequency" : 110.0000
    }
  },

  ///  The configuration for each individual led. This contains the specification of the area
  ///  averaged of an input image for each led to determine its color. Each item in the list
  ///  contains the following fields:
  ///  * index: The index of the led. This determines its location in the string of leds; zero
  ///           being the first led.
  ///  * hscan: The fractional part of the image along the horizontal used for the averaging
  ///           (minimum and maximum inclusive)
  ///  * vscan: The fractional part of the image along the vertical used for the averaging
  ///           (minimum and maximum inclusive)
  "leds" :
  [
    {
      "index" : 0,
      "hscan" : { "minimum" : 0.0000, "maximum" : 0.0700 },
      "vscan" : { "minimum" : 0.8688, "maximum" : 1.0000 }
    },
    {
      "index" : 1,
      "hscan" : { "minimum" : 0.0000, "maximum" : 0.0700 },
      "vscan" : { "minimum" : 0.7438, "maximum" : 0.8813 }
    },
    {
      "index" : 2,
      "hscan" : { "minimum" : 0.0000, "maximum" : 0.0700 },
      "vscan" : { "minimum" : 0.6188, "maximum" : 0.7563 }
    },
    {
      "index" : 3,
      "hscan" : { "minimum" : 0.0000, "maximum" : 0.0700 },
      "vscan" : { "minimum" : 0.4938, "maximum" : 0.6313 }
    },
    {
      "index" : 4,
      "hscan" : { "minimum" : 0.0000, "maximum" : 0.0700 },
      "vscan" : { "minimum" : 0.3688, "maximum" : 0.5063 }
    },
    {
      "index" : 5,
      "hscan" : { "minimum" : 0.0000, "maximum" : 0.0700 },
      "vscan" : { "minimum" : 0.2438, "maximum" : 0.3813 }
    },
    {
      "index" : 6,
      "hscan" : { "minimum" : 0.0000, "maximum" : 0.0700 },
      "vscan" : { "minimum" : 0.1188, "maximum" : 0.2563 }
    },
    {
      "index" : 7,
      "hscan" : { "minimum" : 0.0000, "maximum" : 0.0700 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1313 }
    },
    {
      "index" : 8,
      "hscan" : { "minimum" : 0.0000, "maximum" : 0.0656 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 9,
      "hscan" : { "minimum" : 0.0594, "maximum" : 0.1281 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 10,
      "hscan" : { "minimum" : 0.1219, "maximum" : 0.1906 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 11,
      "hscan" : { "minimum" : 0.1844, "maximum" : 0.2531 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 12,
      "hscan" : { "minimum" : 0.2469, "maximum" : 0.3156 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 13,
      "hscan" : { "minimum" : 0.3094, "maximum" : 0.3781 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 14,
      "hscan" : { "minimum" : 0.3719, "maximum" : 0.4406 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 15,
      "hscan" : { "minimum" : 0.4344, "maximum" : 0.5031 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 16,
      "hscan" : { "minimum" : 0.4969, "maximum" : 0.5656 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 17,
      "hscan" : { "minimum" : 0.5594, "maximum" : 0.6281 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 18,
      "hscan" : { "minimum" : 0.6219, "maximum" : 0.6906 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 19,
      "hscan" : { "minimum" : 0.6844, "maximum" : 0.7531 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 20,
      "hscan" : { "minimum" : 0.7469, "maximum" : 0.8156 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 21,
      "hscan" : { "minimum" : 0.8094, "maximum" : 0.8781 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 22,
      "hscan" : { "minimum" : 0.8719, "maximum" : 0.9406 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 23,
      "hscan" : { "minimum" : 0.9344, "maximum" : 1.0000 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1300 }
    },
    {
      "index" : 24,
      "hscan" : { "minimum" : 0.9300, "maximum" : 1.0000 },
      "vscan" : { "minimum" : 0.0000, "maximum" : 0.1313 }
    },
    {
      "index" : 25,
      "hscan" : { "minimum" : 0.9300, "maximum" : 1.0000 },
      "vscan" : { "minimum" : 0.1188, "maximum" : 0.2563 }
    },
    {
      "index" : 26,
      "hscan" : { "minimum" : 0.9300, "maximum" : 1.0000 },
      "vscan" : { "minimum" : 0.2438, "maximum" : 0.3813 }
    },
    {
      "index" : 27,
      "hscan" : { "minimum" : 0.9300, "maximum" : 1.0000 },
      "vscan" : { "minimum" : 0.3688, "maximum" : 0.5063 }
    },
    {
      "index" : 28,
      "hscan" : { "minimum" : 0.9300, "maximum" : 1.0000 },
      "vscan" : { "minimum" : 0.4938, "maximum" : 0.6313 }
    },
    {
      "index" : 29,
      "hscan" : { "minimum" : 0.9300, "maximum" : 1.0000 },
      "vscan" : { "minimum" : 0.6188, "maximum" : 0.7563 }
    },
    {
      "index" : 30,
      "hscan" : { "minimum" : 0.9300, "maximum" : 1.0000 },
      "vscan" : { "minimum" : 0.7438, "maximum" : 0.8813 }
    },
    {
      "index" : 31,
      "hscan" : { "minimum" : 0.9300, "maximum" : 1.0000 },
      "vscan" : { "minimum" : 0.8688, "maximum" : 1.0000 }
    }
  ],

  /// The black border configuration, contains the following items:
  ///  * enable    : true if the detector should be activated
  ///  * threshold : Value below which a pixel is regarded as black (value between 0.0 and 1.0)
  "blackborderdetector" :
  {
    "enable" : true,
    "threshold" : 0.01
  },

  /// The configuration of the effect engine, contains the following items:
  ///  * paths        : An array with absolute location(s) of directories with effects
  ///  * bootsequence : The effect selected as 'boot sequence'
  "effects" :
  {
    "paths" :
    [
      "/opt/hyperion/effects"
    ]
  },

  // 	"bootsequence" :
  // 	{
  // 		"effect" : "Rainbow swirl fast",
  // 		"duration_ms" : 3000
  // 	},

  ///  The configuration for the frame-grabber, contains the following items:
  ///   * width        : The width of the grabbed frames [pixels]
  ///   * height       : The height of the grabbed frames [pixels]
  ///   * frequency_Hz : The frequency of the frame grab [Hz]
  "framegrabber" :
  {
    "width" : 384,
    "height" : 216,
    "frequency_Hz" : 50.0
  },

  /// The configuration of the XBMC connection used to enable and disable the frame-grabber. Contains the following fields:
  ///  * xbmcAddress       : The IP address of the XBMC-host
  ///  * xbmcTcpPort       : The TCP-port of the XBMC-server
  ///  * grabVideo         : Flag indicating that the frame-grabber is on(true) during video playback
  ///  * grabPictures      : Flag indicating that the frame-grabber is on(true) during picture show
  ///  * grabAudio         : Flag indicating that the frame-grabber is on(true) during audio playback
  ///  * grabMenu          : Flag indicating that the frame-grabber is on(true) in the XBMC menu
  ///  * grabScreensaver   : Flag indicating that the frame-grabber is on(true) when XBMC is on screensaver
  ///  * enable3DDetection : Flag indicating that the frame-grabber should switch to a 3D compatible modus if a 3D video is playing
  // 	"xbmcVideoChecker" :
  // 	{
  // 		"xbmcAddress" : "127.0.0.1",
  // 		"xbmcTcpPort" : 9090,
  // 		"grabVideo" : true,
  // 		"grabPictures" : true,
  // 		"grabAudio" : true,
  // 		"grabMenu" : false,
  // 		"grabScreensaver" : true,
  // 		"enable3DDetection" : true
  // 	},

  /// The configuration of the Json server which enables the json remote interface
  ///  * port : Port at which the json server is started
  // 	"jsonServer" :
  // 	{
  // 		"port" : 19444
  // 	},

  /// The configuration of the Proto server which enables the protobuffer remote interface
  ///  * port : Port at which the protobuffer server is started
  // 	"protoServer" :
  // 	{
  // 		"port" : 19445
  // 	},

  /// The configuration of the boblight server which enables the boblight remote interface
  ///  * port : Port at which the boblight server is started
  // 	"boblightServer" :
  // 	{
  // 		"port" : 19333
  // 	},

  "endOfJson" : "endOfJson"
}
